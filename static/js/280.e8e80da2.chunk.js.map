{"version":3,"file":"static/js/280.e8e80da2.chunk.js","mappings":"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","sources":["pages/auth/login.component.jsx","pages/auth/register.component.jsx","pages/auth/auth.jsx","pages/authenticate.jsx"],"sourcesContent":["import { Fragment, createRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { userService } from '../../services/users.service';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faLock, faCheckDouble, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { logUserIn, selectRegistering, selectLogingIn } from '../../redux/authReducer';\r\n\r\nconst LoginComponent = ({switchRegister}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  \r\n  const location = useLocation();\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  \r\n  const loggingIn = useSelector(selectLogingIn);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  return (\r\n    <form className=\"w-full px-[3rem] text-xl\">\r\n      <div className=\"flex flex-col my-[1rem] mb-[3rem] mt-[2rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-2\" for=\"grid-first-name\">\r\n          Email:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"email\" />\r\n        <p className='text-red-400 text-sm'>Email Address is not recognised. Please check again or register.</p>\r\n      </div>\r\n      <div className=\"flex flex-col my-[1rem] mb-[3rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-2\" for=\"grid-first-name\">\r\n          Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\" />\r\n        <p className='text-red-400 text-sm'>Password incorrect/not found. Please check and try again.</p>\r\n      </div>\r\n      <div className='flex justify-between'>\r\n          <button \r\n              className={`w-[8rem] text-xl text-gray-100 text-left underline decoration-1 leading-[2.6rem]`}\r\n              onClick={() => switchRegister()}\r\n              \r\n          >Register</button>\r\n          <button \r\n              className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n              \r\n          >Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;","import { Fragment, createRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { userService } from '../../services/users.service';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faLock, faCheckDouble, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { registerUser, selectRegistering } from '../../redux/authReducer';\r\nimport Select from 'react-select';\r\nimport { NATIONALITIES }  from '../../config/constants';\r\n\r\nconst RegisterComponent = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const registering = useSelector(selectRegistering);\r\n  const [regproc, setRegproc] = useState(false);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repassword, setRepassword] = useState('');\r\n  const [role, setRole] = useState('tenant');\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  \r\n  const form_groups = [\r\n    <div className='w-full h-full'>\r\n      <div className=\"flex flex-col mb-[0.5rem] mt-[1rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\" for=\"grid-first-name\">\r\n          Email:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"email\" />\r\n        <p className='text-red-400 text-sm'>Email format incorrect. Please check and try again.</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\" for=\"grid-first-name\">\r\n          Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\" />\r\n        <p className='text-red-400 text-sm'>{'Password must be alphanumeric, > 8 characters and contain one symbol.'}</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\" for=\"grid-first-name\">\r\n          Confirm Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\" />\r\n        <p className='text-red-400 text-sm'>Passwords do not match</p>\r\n      </div>\r\n    </div>,\r\n    <div className='w-full h-full'>\r\n      <div className=\"flex flex-col mb-[0.5rem] mt-[1rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\" for=\"grid-first-name\">\r\n          Business Name:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\" />\r\n        <p className='text-red-400 text-sm'>{'Business Name must be >2 characters'}</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\" for=\"grid-first-name\">\r\n          Address:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\" />\r\n        <p className='text-red-400 text-sm'>Address must not be empty</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\" for=\"grid-first-name\">\r\n          Postcode:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\" />\r\n        <p className='text-red-400 text-sm'>Postcode must not be empty</p>\r\n      </div>\r\n    </div>,\r\n    <div className='w-full h-full'>\r\n      <div className='text-2xl font-bold mt-4 text-gray-100'>Add Users?</div>\r\n      <div className=\"flex flex-row items-center\">\r\n        <div className=\"flex flex-col mb-[0.5rem] mt-[1rem] w-[60%]\">\r\n          <div className=\"flex flex-row items-center\">\r\n            <label className=\"block uppercase tracking-wide text-gray-100 mb-1\" for=\"grid-first-name\">\r\n              Name:\r\n            </label>\r\n            <input \r\n                className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                type=\"text\" />\r\n          </div>\r\n          <p className='text-red-400 text-sm'>{'Name must be >2 characters'}</p>\r\n        </div>\r\n        <div className=\"flex flex-col mb-[0.5rem] mt-[1rem] w-[40%]\">\r\n          <div className=\"flex flex-row items-center\">\r\n            <label className=\"block uppercase tracking-wide text-gray-100 mb-1\" for=\"grid-first-name\">\r\n              PIN:\r\n            </label>\r\n            <input \r\n                className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                type=\"text\" />\r\n          </div>\r\n          <p className='text-red-400 text-sm'>PIN should be 4 digits</p>\r\n        </div>\r\n        <button \r\n            className={`w-[2rem] h-[2rem] text-xl rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n        >+</button>\r\n      </div>\r\n      <div className='text-xl text-gray-100 mt-[10rem]'>Click next if no other users needed</div>\r\n    </div>\r\n  ];\r\n  \r\n  const [currentGroup, setCurrentGroup] = useState(0);\r\n\r\n  const refs = form_groups.reduce((acc, val, i) => {\r\n    acc[i] = createRef();\r\n    return acc;\r\n  }, {});\r\n\r\n  const totalGroups = form_groups.length;\r\n  const scrollToGroup = i => {\r\n    setCurrentGroup(i);\r\n    refs[i].current.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'nearest',\r\n      inline: 'start',\r\n    });\r\n  };\r\n  const nextGroup = () => {\r\n    if (currentGroup >= totalGroups - 1) {\r\n      //scrollToGroup(0);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup + 1);\r\n    }\r\n  };\r\n  const previousGroup = () => {\r\n    if (currentGroup === 0) {\r\n      //scrollToGroup(totalGroups - 1);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup - 1);\r\n    }\r\n  };\r\n\r\n  const nextGroupProc = async () => {\r\n    nextGroup();\r\n  }\r\n\r\n  const prevGroupProc = async () => {\r\n    previousGroup();\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full px-[3rem] text-xl\">\r\n      <div className='relative w-full h-full'>\r\n        <div className=\"carousel w-full h-full\">\r\n          {form_groups.map((form_group, i) => {\r\n            return (\r\n              <div className='w-full h-full flex-shrink-0' key={i} ref={refs[i]}>  \r\n                {form_group} \r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className='flex justify-between'>\r\n          <button \r\n              className={`w-[5rem] text-xl text-gray-100 text-left underline decoration-1 leading-[2.6rem]`}\r\n              onClick={() => prevGroupProc()}\r\n              \r\n          >Back</button>\r\n          <button \r\n              className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n              onClick={() => nextGroupProc()}\r\n          >Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterComponent;","import {useState} from 'react';\r\nimport LoginComponent from './login.component';\r\nimport RegisterComponent from './register.component';\r\n\r\nconst Auth = () => {\r\n  const [signFlag, setSignFlag] = useState(false); // false: signin, true: signup\r\n  const [role, setRole] = useState('customer');\r\n\r\n  const switchRegister = () => {\r\n    setSignFlag(true);\r\n  }\r\n\r\n  return (\r\n    <div className='w-full h-[100vh] flex justify-center items-center'>\r\n        <div className='w-[50vw] max-w-[1000px] min-w-[380px] min-h-[460px] rounded-[1rem] border border-white'>\r\n            <div className='flex border-b border-gray-300'>\r\n                <button \r\n                    className={`w-full text-xl leading-[3.6rem] rounded-t-[1rem] ${role === 'customer' ? 'bg-[#D9D9D9] text-gray-800' : 'bg-transparent text-gray-100'}`}\r\n                    onClick={() => setRole('customer')}\r\n                >Customers</button>\r\n                <button \r\n                    className={`w-full text-xl leading-[3.6rem] rounded-t-[1rem] ${role === 'merchant' ? 'bg-[#D9D9D9] text-gray-800' : 'bg-transparent text-gray-100'}`}\r\n                    onClick={() => setRole('merchant')}\r\n                >Merchants</button>\r\n            </div>\r\n            {signFlag ? <RegisterComponent /> : <LoginComponent switchRegister={switchRegister}/>}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;","import Auth from './auth/auth';\r\n\r\nconst Authenticate = () => {\r\n\r\n  return (    \r\n    <Auth />\r\n  );\r\n}\r\n\r\nexport default Authenticate;"],"names":["switchRegister","useNavigate","useDispatch","useLocation","state","from","pathname","useSelector","selectLogingIn","useState","className","for","type","onClick","selectRegistering","form_groups","currentGroup","setCurrentGroup","refs","reduce","acc","val","i","createRef","totalGroups","length","scrollToGroup","current","scrollIntoView","behavior","block","inline","nextGroupProc","prevGroupProc","map","form_group","ref","signFlag","setSignFlag","role","setRole"],"sourceRoot":""}