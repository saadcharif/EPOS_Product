{"version":3,"file":"static/js/37.78b9704b.chunk.js","mappings":"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","sources":["pages/dashboard/merchant_group/add.category.modal.jsx","pages/dashboard/merchant_group/add.product.modal.jsx","pages/dashboard/merchant_group/inventory.jsx"],"sourcesContent":["import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateCategoryData } from '../../../redux/pcategoryReducer';\r\n\r\nconst AddCategoryModal = ({isModal, setIsModal}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [cate, setCate] = useState('');\r\n\r\n  const handleConfirm = () => {\r\n    dispatch(updateCategoryData(0, {name: cate}))\r\n    setCate('');\r\n    setIsModal(false);\r\n  }\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Please enter category name:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                  <input \r\n                    className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"text\"\r\n                    value={cate}\r\n                    onChange={e => setCate(e.target.value)} />\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#404040] border border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                      onClick={() => setIsModal(false)}\r\n                  >Cancel</button>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                      onClick={() => handleConfirm()}\r\n                  >Confirm</button>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default AddCategoryModal;","import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProductData } from '../../../redux/productReducer';\r\n\r\nconst AddProductModal = ({isModal, setIsModal, categories}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [categoryID, setCategoryID] = useState('');\r\n\r\n  const handleConfirm = () => {    \r\n    dispatch(updateProductData(0, {\r\n      name: name,\r\n      desc: desc,\r\n      price: price,\r\n      categoryId: categoryID\r\n    }))\r\n    setName('');\r\n    setDesc('');\r\n    setPrice(0);\r\n    setCategoryID(categories[0]._id);\r\n    setIsModal(false);\r\n  }\r\n\r\n  const handleSelect = (e) => {\r\n    setCategoryID(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (categories[0]) {\r\n      setCategoryID(categories[0]._id)\r\n    }\r\n  }, [categories[0]])\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Product Name:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                  <input \r\n                    className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}  />\r\n                </div>\r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Description:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                  <input \r\n                    className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"text\"\r\n                    value={desc}\r\n                    onChange={e => setDesc(e.target.value)}  />\r\n                </div>\r\n                <div className='flex min-h-[7rem] gap-4'>\r\n                  <div className='w-[40%]'>\r\n                    {/* TITLE */}\r\n                    <div className=''>\r\n                      <h1 className='text-md text-left text-[#D9D9D9] select-none'>Price:</h1>\r\n                    </div>\r\n                    {/* CONTENTS */}\r\n                    <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                      <input \r\n                        className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                        type=\"number\"\r\n                        value={price}\r\n                        onChange={e => setPrice(e.target.value)}  />\r\n                    </div>\r\n                  </div>\r\n                  <div className='w-[60%]'>\r\n                    {/* TITLE */}\r\n                    <div className=''>\r\n                      <h1 className='text-md text-left text-[#D9D9D9] select-none'>Category:</h1>\r\n                    </div>\r\n                    {/* CONTENTS */}\r\n                    <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                      <select\r\n                        className=\"bg-[#404040] border-b border-gray-300 text-gray-100 text-sm block w-full p-2.5 focus:outline-none\"\r\n                        onChange={(e) => handleSelect(e)}\r\n                      >\r\n                        {\r\n                          categories.map((c, index) => {\r\n                            return (\r\n                              <option key={index} value={c._id}>{c.name}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </select>    \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#404040] border border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                      onClick={() => setIsModal(false)}\r\n                  >Cancel</button>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                      onClick={() => handleConfirm()}\r\n                  >Confirm</button>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default AddProductModal;","import {useState} from 'react';\r\nimport Layout from '../../../components/Layout';\r\nimport Sidebar from '../sidebar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport AddCategoryModal from './add.category.modal';\r\nimport AddProductModal from './add.product.modal';\r\nimport { selectCategories, getCategories } from '../../../redux/pcategoryReducer';\r\nimport { selectProducts, getProducts } from '../../../redux/productReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nconst Inventory = () => {\r\n  const dispatch = useDispatch();\r\n  const [categoryModal, setCategoryModal] = useState(false);\r\n  const [productModal, setProductModal] = useState(false);\r\n  const categories = useSelector(selectCategories);\r\n  const products = useSelector(selectProducts);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n    dispatch(getProducts());\r\n  }, [])\r\n\r\n  const categoryName = (id) => {\r\n    const cate = categories.filter((c) => c._id === id);\r\n    return cate[0] ? cate[0].name : '';\r\n  }\r\n\r\n  return (\r\n    <Layout classes={'bg-[#404040] h-full'}>\r\n        <div className='flex flex-row'>\r\n            <div className=\"w-full h-[calc(100vh-80px)]\">\r\n              <div className='text-gray-100 text-2xl flex flex-row items-center px-[2rem] mt-6'>\r\n                <FontAwesomeIcon icon={faHome}/>\r\n                <p className='ml-2 font-bold'>Inventory</p>\r\n              </div>\r\n              <div className='w-[50%] flex px-[2rem] mt-[2rem] text-gray-100 text-xl italic'>\r\n                <button \r\n                    className={`w-[10rem] text-md leading-[2.1rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n                    onClick={() => setCategoryModal(true)}\r\n                >Add Category</button>\r\n                <button \r\n                    className={`w-[10rem] text-md leading-[2.1rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800 ml-6`}\r\n                    onClick={() => setProductModal(true)}\r\n                >Add Product</button>\r\n              </div>\r\n              <div className='text-md divide-y divide-gray-400 py-1 mt-2 px-[2rem]'>\r\n                <div className='text-xl font-bold uppercase text-gray-100 mb-2'>Categories</div>\r\n                <div className='h-[28vh] overflow-y-auto'>\r\n                  {\r\n                    categories.map((c, index) => {\r\n                      return (\r\n                        <div key={index} className='w-full flex text-gray-100 leading-[1.4rem]'>\r\n                          <p className='w-[70%]'>{c.name}</p>\r\n                          <p className='w-[15%] text-center select-none cursor-pointer'>Edit</p>\r\n                          <p className='w-[15%] text-center select-none cursor-pointer'>Delete</p>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className='text-md divide-y divide-gray-400 py-1 mt-2 px-[2rem]'>\r\n                <div className='text-xl font-bold uppercase text-gray-100 mb-2'>PRODUCTS</div>\r\n                <div className='h-[28vh] overflow-y-auto'>\r\n                  {\r\n                    products.map((p, index) => {\r\n                      return (\r\n                        <div key={index} className='w-full flex text-gray-100 leading-[1.4rem]'>\r\n                          <p className='w-[70%]'>{p.name}{' > '}{categoryName(p.categoryId)}</p>\r\n                          <p className='w-[15%] text-center select-none cursor-pointer'>Edit</p>\r\n                          <p className='w-[15%] text-center select-none cursor-pointer'>Delete</p>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Sidebar />\r\n        </div>\r\n        <AddCategoryModal isModal={categoryModal} setIsModal={setCategoryModal} />\r\n        <AddProductModal isModal={productModal} setIsModal={setProductModal} categories={categories} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Inventory;"],"names":["isModal","setIsModal","dispatch","useNavigate","useDispatch","useState","cate","setCate","appear","show","as","Fragment","onClose","className","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","type","value","onChange","e","target","onClick","updateCategoryData","name","categories","setName","desc","setDesc","price","setPrice","categoryID","setCategoryID","useEffect","_id","handleSelect","map","c","index","updateProductData","categoryId","categoryModal","setCategoryModal","productModal","setProductModal","useSelector","selectCategories","products","selectProducts","getCategories","getProducts","categoryName","id","filter","Layout","classes","icon","faHome","p"],"sourceRoot":""}