{"version":3,"file":"static/js/414.3bd1955e.chunk.js","mappings":"uNA8GA,UAlGe,WAEb,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,KAE7BC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,MACX,GAAG,IAEH,IAAMC,EAAa,SAACC,GAElB,OADUL,EAASM,QAAO,SAACC,GAAC,OAAKA,EAAEC,MAAQH,CAAE,IACpC,EACX,EAEMI,EAAgB,SAACC,GAErB,IADA,IAAIC,EAAM,EACDC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,IAAK,CACzC,IAAME,EAAIV,EAAWM,EAAUE,GAAGG,WAEhCJ,EADEG,GACIE,EAAAA,EAAAA,IAASL,GAAKM,EAAAA,EAAAA,IAASH,EAAEI,MAAOR,EAAUE,GAAGO,UAE7CH,EAAAA,EAAAA,IAASL,EAAK,EAExB,CACA,OAAOA,EAAIS,QAAQ,EACrB,EAMA,OACE,SAAC,IAAM,CAACC,QAAS,sBAAsB,UACnC,iBAAKC,UAAU,gBAAe,WAC1B,iBAAKA,UAAU,8BAA6B,WAC1C,iBAAKA,UAAU,mEAAkE,WAC/E,SAAC,IAAe,CAACC,KAAMC,EAAAA,OACvB,cAAGF,UAAU,iBAAgB,SAAC,eAEhC,gBAAKA,UAAU,0EAAyE,SAEpFzB,EAAO4B,KAAI,SAACC,EAAOC,GACjB,IAAMjB,EAAYkB,KAAKC,MAAMH,EAAMA,MAAMA,OACzC,OACE,iBAAiBJ,UAAU,qCAAoC,WAC7D,kBAAOQ,KAAK,cACZ,iBAAKR,UAAU,2EAA2ES,MAAO,CAACC,UAAW,OAAO,WAClH,gBAAKV,UAAU,oBAAmB,SAAEK,EAAQ,KAC5C,gBAAKL,UAAU,sBAAqB,SAAEI,EAAMO,SAASC,SAAWR,EAAMO,SAASC,SAAWR,EAAMO,SAASE,gBACzG,gBAAKb,UAAU,sBAAqB,SAAEI,EAAMU,SAASF,YACrD,gBAAKZ,UAAU,sEAAqE,UAAC,SAAC,IAAe,CAACC,KAAMc,EAAAA,YAE9G,iBAAKf,UAAU,0CAAyC,UAEpDZ,EAAUe,KAAI,SAACa,EAAG1B,GAChB,IAAME,EAAIV,EAAWkC,EAAEvB,WACvB,OACE,gBAAyBO,UAAU,OAAM,UACrC,iBAAKA,UAAU,+BAA8B,WACzC,2BAAMR,EAAEyB,KAAK,MAAID,EAAEnB,WACnB,0BAAMF,EAAAA,EAAAA,IAASH,EAAEI,MAAOoB,EAAEnB,QAAQC,QAAQ,SAHxCR,EAAE,IAAMe,EAOtB,KAEF,iBAAKL,UAAU,wEAAuE,WAClF,yBAAK,cACL,yBAAMb,EAAcC,SAExB,iBAAKY,UAAU,8CAA6C,WACxD,yBAAK,sBACL,2BAAMI,EAAMA,MAAMc,WAAWpB,QAAQ,GAAG,IAAEqB,EAAAA,GAAWf,EAAMA,MAAMgB,iBAErE,iBAAKpB,UAAU,4BAA2B,WACxC,mBACIA,UAAS,yGAA2G,SAEvH,4BACD,mBACIA,UAAS,gGACTqB,QAAS,kBAtDjBC,EAsDkClB,EAAMA,MAAMlB,SArDlEb,GAASkD,EAAAA,EAAAA,IAAYD,IADF,IAACA,CAsDkD,EAAC,SAC9C,mBAtCGjB,EA2Cd,UAIN,SAAC,IAAO,QAIpB,C","sources":["pages/dashboard/merchant_group/orders.jsx"],"sourcesContent":["import Layout from '../../../components/Layout';\r\nimport Sidebar from '../sidebar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { selectSaleOrders, getOrdersBySale, refundOrder } from '../../../redux/orderReducer';\r\nimport { selectProducts } from '../../../redux/productReducer';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { floatAdd, floatMul } from '../../../utils/utils';\r\nimport { COIN_TYPES } from '../../../config/constants';\r\n\r\nconst Orders = () => {\r\n  // const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const orders = useSelector(selectSaleOrders);\r\n  const products = useSelector(selectProducts);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrdersBySale());\r\n  }, []);\r\n\r\n  const getProduct = (id) => {\r\n    const p = products.filter((e) => e._id === id);\r\n    return p[0];\r\n  }\r\n\r\n  const getOrderPrice = (orderlist) => {\r\n    let ret = 0;\r\n    for (let i = 0; i < orderlist.length; i++) {\r\n      const p = getProduct(orderlist[i].productId);\r\n      if (p) {\r\n        ret = floatAdd(ret, floatMul(p.price, orderlist[i].amount));\r\n      } else {\r\n        ret = floatAdd(ret, 0);\r\n      }\r\n    }\r\n    return ret.toFixed(2);\r\n  }\r\n\r\n  const handleRefund = (orderId) => {\r\n    dispatch(refundOrder(orderId));\r\n  }\r\n\r\n  return (\r\n    <Layout classes={'bg-[#404040] h-full'}>\r\n        <div className='flex flex-row'>\r\n            <div className=\"w-full h-[calc(100vh-80px)]\">\r\n              <div className='text-gray-100 text-2xl flex flex-row items-center px-[2rem] mt-6'>\r\n                <FontAwesomeIcon icon={faHome}/>\r\n                <p className='ml-2 font-bold'>Orders</p>\r\n              </div>\r\n              <div className='text-md text-gray-100 mt-8 h-[calc(100vh-112px-3.5rem)] overflow-y-auto'>\r\n                {\r\n                  orders.map((order, index) => {\r\n                    const orderlist = JSON.parse(order.order.order);\r\n                    return (\r\n                      <div key={index} className=\"collapse border-b border-[#444444]\">\r\n                        <input type=\"checkbox\" /> \r\n                        <div className='collapse-title w-full flex items-center bg-[#333333] px-[2rem] py-[0rem]' style={{minHeight: '0px'}}>\r\n                          <div className='w-[10%] text-left'>{index + 1}</div>\r\n                          <div className='w-[40%] text-center'>{order.merchant.username ? order.merchant.username : order.merchant.businessname}</div>\r\n                          <div className='w-[40%] text-center'>{order.customer.username}</div>\r\n                          <div className='w-[10%] collapse-title text-right cursor-pointer py-[1rem] pr-[0px]'><FontAwesomeIcon icon={faCaretDown}/></div>\r\n                        </div>\r\n                        <div className=\"collapse-content bg-[#333333] px-[2rem]\"> \r\n                          {\r\n                            orderlist.map((o, i) => {\r\n                              const p = getProduct(o.productId);\r\n                              return (\r\n                                <div key={i+20000*index} className=\"py-1\">    \r\n                                    <div className='flex justify-between text-md'>\r\n                                        <div>{p.name} X {o.amount}</div>\r\n                                        <div>{floatMul(p.price, o.amount).toFixed(2)}</div>\r\n                                    </div>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          }\r\n                          <div className='flex justify-between py-1 text-md font-bold border-t border-[#464646]'>\r\n                              <div>SUBTOTAL</div>\r\n                              <div>{getOrderPrice(orderlist)}</div>\r\n                          </div>\r\n                          <div className='flex justify-between py-1 text-md font-bold'>\r\n                              <div>CRYPTO RECEIVED:</div>\r\n                              <div>{order.order.coinAmount.toFixed(2)} {COIN_TYPES[order.order.coinType]}</div>\r\n                          </div>\r\n                          <div className='flex justify-between mt-2'>\r\n                            <button \r\n                                className={`min-w-[6rem] h-[2rem] text-md leading-[2rem] bg-[#333333] border-b border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                                \r\n                            >Print Customer Receipt</button>\r\n                            <button \r\n                                className={`px-2 min-w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                                onClick={()=>handleRefund(order.order._id)}\r\n                            >Refund</button>\r\n                          </div> \r\n                        </div>   \r\n                      </div>\r\n                    );\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n            <Sidebar />\r\n        </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Orders;"],"names":["dispatch","useDispatch","orders","useSelector","selectSaleOrders","products","selectProducts","useEffect","getOrdersBySale","getProduct","id","filter","e","_id","getOrderPrice","orderlist","ret","i","length","p","productId","floatAdd","floatMul","price","amount","toFixed","classes","className","icon","faHome","map","order","index","JSON","parse","type","style","minHeight","merchant","username","businessname","customer","faCaretDown","o","name","coinAmount","COIN_TYPES","coinType","onClick","orderId","refundOrder"],"sourceRoot":""}