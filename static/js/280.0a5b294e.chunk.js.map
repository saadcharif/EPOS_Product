{"version":3,"file":"static/js/280.0a5b294e.chunk.js","mappings":"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","sources":["pages/auth/login.component.jsx","pages/auth/register.component.jsx","pages/auth/auth.jsx","pages/authenticate.jsx"],"sourcesContent":["import { Fragment, createRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { userService } from '../../services/users.service';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faLock, faCheckDouble, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { logUserIn, selectRegistering, selectLoggedIn } from '../../redux/authReducer';\r\n\r\nconst LoginComponent = ({switchRegister, role}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  \r\n  const location = useLocation();\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  \r\n  const isLoggedIn = useSelector(selectLoggedIn);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [emailIssue, setEmailIssue] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [passwordIssue, setPasswordIssue] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      navigate('/');\r\n    }\r\n  }, [isLoggedIn])\r\n\r\n  useEffect(() => {\r\n    setEmail('');\r\n    setPassword('');\r\n  }, [])\r\n\r\n  const checkGroupValidation = (index) => {\r\n    const ret = {message: \"\", status: false};\r\n\r\n    switch (index) {\r\n      case 0:\r\n        if (email.length === 0) {ret.message = \"Please input email\"; ret.status = false; setEmailIssue(true)}\r\n        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {ret.message = \"Invalid Email!\"; ret.status = false; setEmailIssue(true)}\r\n        else if (password.length === 0) {ret.message = \"Please input password\"; ret.status = false; setPasswordIssue(true)}\r\n        else { ret.message = \"\"; ret.status = true;}\r\n        break;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  const loginProc = async () => {\r\n    \r\n    const checking = checkGroupValidation(0);\r\n    if (!checking.status) {\r\n      dispatch(openSnackBar({ message: checking.message, status: 'error' }));  \r\n      return;\r\n    }\r\n\r\n    dispatch(logUserIn(email, password, role, from.pathname));\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full px-[3rem] text-xl\">\r\n      <div className=\"flex flex-col my-[1rem] mb-[3rem] mt-[2rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-2\">\r\n          Email:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => {setEmail(e.target.value); setEmailIssue(false)}} />\r\n        <p className={`${emailIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>Email Address is not recognised. Please check again or register.</p>\r\n      </div>\r\n      <div className=\"flex flex-col my-[1rem] mb-[3rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-2\">\r\n          Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => {setPassword(e.target.value); setPasswordIssue(false)}} />\r\n        <p className={`${passwordIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>Password incorrect/not found. Please check and try again.</p>\r\n      </div>\r\n      <div className='flex justify-between'>\r\n          <button \r\n              className={`w-[8rem] text-xl text-gray-100 text-left underline decoration-1 leading-[2.6rem]`}\r\n              onClick={() => switchRegister()}\r\n              \r\n          >Register</button>\r\n          <button \r\n              className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n              onClick={() => loginProc()}\r\n          >Login</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;","import { Fragment, createRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { userService } from '../../services/users.service';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faLock, faCheckDouble, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { registerUser, selectRegistering, selectRegisterSuccess } from '../../redux/authReducer';\r\nimport Select from 'react-select';\r\nimport { NATIONALITIES }  from '../../config/constants';\r\n\r\nconst RegisterComponent = ({role}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const registering = useSelector(selectRegistering);\r\n  const successRegistered = useSelector(selectRegisterSuccess);\r\n  const [regproc, setRegproc] = useState(false);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repassword, setRepassword] = useState('');\r\n  const [businessname, setBusinessname] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [postcode, setPostcode] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [userpin, setUserpin] = useState('');\r\n  const [emailIssue, setEmailIssue] = useState(false);\r\n  const [passwordIssue, setPasswordIssue] = useState(false);\r\n  const [repasswordIssue, setRepasswordIssue] = useState(false);\r\n  const [businessIssue, setBusinessIssue] = useState(false);\r\n  const [addressIssue, setAddressIssue] = useState(false);\r\n  const [postcodeIssue, setPostcodeIssue] = useState(false);\r\n  const [usernameIssue, setUsernameIssue] = useState(false);\r\n  const [pinIssue, setPinIssue] = useState(false);\r\n  \r\n  const form_groups = [\r\n    <div className='w-full h-full'>\r\n      <div className=\"flex flex-col mb-[0.5rem] mt-[1rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Email:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => {setEmail(e.target.value); setEmailIssue(false)}} />\r\n        <p className={`${emailIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>Email format incorrect. Please check and try again.</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => {setPassword(e.target.value); setPasswordIssue(false)}} />\r\n        <p className={`${passwordIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>{'Password must be alphanumeric, > 8 characters and contain one symbol.'}</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Confirm Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\"\r\n            value={repassword}\r\n            onChange={e => {setRepassword(e.target.value); setRepasswordIssue(false)}} />\r\n        <p className={`${repasswordIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>Passwords do not match</p>\r\n      </div>\r\n    </div>,\r\n    <div className='w-full h-full'>\r\n      <div className=\"flex flex-col mb-[0.5rem] mt-[1rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Business Name:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={businessname}\r\n            onChange={e => {setBusinessname(e.target.value); setBusinessIssue(false)}} />\r\n        <p className={`${businessIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>{'Business Name must be >2 characters'}</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Address:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={address}\r\n            onChange={e => {setAddress(e.target.value); setAddressIssue(false)}} />\r\n        <p className={`${addressIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>Address must not be empty</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Postcode:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={postcode}\r\n            onChange={e => {setPostcode(e.target.value); setPostcodeIssue(false)}} />\r\n        <p className={`${postcodeIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>Postcode must not be empty</p>\r\n      </div>\r\n    </div>,\r\n    <div className='w-full h-full'>\r\n      <div className='text-2xl font-bold mt-4 text-gray-100'>Add Users?</div>\r\n      <div className=\"flex flex-row items-center\">\r\n        <div className=\"flex flex-col mb-[0.5rem] mt-[1rem] w-[60%]\">\r\n          <div className=\"flex flex-row items-center\">\r\n            <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n              Name:\r\n            </label>\r\n            <input \r\n                className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                type=\"text\"\r\n                value={username}\r\n                onChange={e => {setUsername(e.target.value); setUsernameIssue(false)}} />\r\n          </div>\r\n          <p className={`${usernameIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>{'Name must be >2 characters'}</p>\r\n        </div>\r\n        <div className=\"flex flex-col mb-[0.5rem] mt-[1rem] w-[40%]\">\r\n          <div className=\"flex flex-row items-center\">\r\n            <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n              PIN:\r\n            </label>\r\n            <input \r\n                className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                type=\"text\"\r\n                value={userpin}\r\n                onChange={e => {setUserpin(e.target.value); setPinIssue(false)}} />\r\n          </div>\r\n          <p className={`${pinIssue ? 'text-red-400':'text-[#404040]'} text-sm`}>PIN should be 4 digits</p>\r\n        </div>\r\n        <button \r\n            className={`w-[2rem] h-[2rem] text-xl rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n        >+</button>\r\n      </div>\r\n      <div className='text-xl text-gray-100 mt-[10rem]'>Click next if no other users needed</div>\r\n    </div>\r\n  ];\r\n  \r\n  const [currentGroup, setCurrentGroup] = useState(0);\r\n\r\n  const refs = form_groups.reduce((acc, val, i) => {\r\n    acc[i] = createRef();\r\n    return acc;\r\n  }, {});\r\n\r\n  const totalGroups = form_groups.length;\r\n  const scrollToGroup = i => {\r\n    setCurrentGroup(i);\r\n    refs[i].current.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'nearest',\r\n      inline: 'start',\r\n    });\r\n  };\r\n  const nextGroup = () => {\r\n    if (currentGroup >= totalGroups - 1) {\r\n      //scrollToGroup(0);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup + 1);\r\n    }\r\n  };\r\n  const previousGroup = () => {\r\n    if (currentGroup === 0) {\r\n      //scrollToGroup(totalGroups - 1);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup - 1);\r\n    }\r\n  };\r\n\r\n  const checkGroupValidation = (index) => {\r\n    const ret = {message: \"\", status: false};\r\n\r\n    switch (index) {\r\n      case 0:\r\n        if (email.length === 0) {ret.message = \"Please input email\"; ret.status = false;}\r\n        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {ret.message = \"Invalid Email!\"; ret.status = false;}\r\n        else if (password.length === 0) {ret.message = \"Please input password\"; ret.status = false;}\r\n        else if (password.length < 6) {ret.message = \"Password must be > 5 characters\"; ret.status = false;}\r\n        else if (repassword.length === 0) {ret.message = \"Please type confirm password\"; ret.status = false;}\r\n        else if (password !== repassword) {ret.message = \"Not match password\"; ret.status = false;}\r\n        else { ret.message = \"\"; ret.status = true;}\r\n        break;\r\n      case 1:\r\n        if (businessname.length === 0) {ret.message = \"Please input businessname\"; ret.status = false;}\r\n        else if (address.length === 0) {ret.message = \"Please input address\"; ret.status = false;}\r\n        else if (postcode.length === 0) {ret.message = \"Please input postcode\"; ret.status = false;}\r\n        else { ret.message = \"\"; ret.status = true;}\r\n        break;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  const nextGroupProc = async () => {\r\n    if (currentGroup === 0) {\r\n      const checking = checkGroupValidation(0);\r\n      if (!checking.status) {\r\n        dispatch(openSnackBar({ message: checking.message, status: 'error' }));  \r\n        return;\r\n      }\r\n\r\n      // dispatch(openSnackBar({ message: `Checking user email.`, status: 'success' }));\r\n      const res = await userService.checkUserByEmail(email);\r\n\r\n      if (res.result) {\r\n        dispatch(openSnackBar({ message: `User with email: ${email} already exists. Please check your email.`, status: 'error' }));\r\n        return;        \r\n      }\r\n      // dispatch(openSnackBar({ message: `User with email: ${email} is available.`, status: 'success' }));\r\n    }\r\n    else if (currentGroup === 1) {\r\n      const checking = checkGroupValidation(1);\r\n      if (!checking.status) {\r\n        dispatch(openSnackBar({ message: checking.message, status: 'error' }));  \r\n        return;\r\n      }\r\n    }\r\n    else if (currentGroup === 2) {\r\n      dispatch(registerUser({\r\n        businessname: businessname, \r\n        address: address, \r\n        postcode: postcode, \r\n        email: email, \r\n        password: password, \r\n        role: role, \r\n        username: username, \r\n        userpin: userpin,\r\n        token: undefined\r\n      }));\r\n\r\n      setRegproc(true);\r\n      return;\r\n    }\r\n    nextGroup();\r\n  }\r\n\r\n  const prevGroupProc = async () => {\r\n    previousGroup();\r\n  }\r\n\r\n  useEffect (() => {\r\n    if (successRegistered) {\r\n      navigate('/');\r\n    }\r\n  }, [successRegistered])\r\n\r\n  return (\r\n    <div className=\"w-full px-[3rem] text-xl\">\r\n      <div className='relative w-full h-full'>\r\n        <div className=\"carousel w-full h-full\">\r\n          {form_groups.map((form_group, i) => {\r\n            return (\r\n              <div className='w-full h-full flex-shrink-0' key={i} ref={refs[i]}>  \r\n                {form_group} \r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className='flex justify-between'>\r\n          <button \r\n              className={`w-[5rem] text-xl text-gray-100 text-left underline decoration-1 leading-[2.6rem]`}\r\n              onClick={() => prevGroupProc()}\r\n              \r\n          >Back</button>\r\n          <button \r\n              className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n              onClick={() => nextGroupProc()}\r\n          >Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterComponent;","import {useState} from 'react';\r\nimport LoginComponent from './login.component';\r\nimport RegisterComponent from './register.component';\r\n\r\nconst Auth = () => {\r\n  const [signFlag, setSignFlag] = useState(false); // false: signin, true: signup\r\n  const [role, setRole] = useState('merchant');\r\n\r\n  const switchRegister = () => {\r\n    setSignFlag(true);\r\n  }\r\n\r\n  return (\r\n    <div className='w-full h-[100vh] flex justify-center items-center'>\r\n        <div className='w-[50vw] max-w-[1000px] min-w-[380px] min-h-[460px] rounded-[1rem] border border-white'>\r\n            <div className='flex border-b border-gray-300'>\r\n                <button \r\n                    className={`w-full text-xl leading-[3.6rem] rounded-t-[1rem] ${role === 'merchant' ? 'bg-[#D9D9D9] text-gray-800' : 'bg-transparent text-gray-100'}`}\r\n                    onClick={() => setRole('merchant')}\r\n                >Merchants</button>\r\n                <button \r\n                    className={`w-full text-xl leading-[3.6rem] rounded-t-[1rem] ${role === 'customer' ? 'bg-[#D9D9D9] text-gray-800' : 'bg-transparent text-gray-100'}`}\r\n                    onClick={() => setRole('customer')}\r\n                >Customers</button>\r\n            </div>\r\n            {signFlag ? <RegisterComponent role={role}/> : <LoginComponent switchRegister={switchRegister} role={role}/>}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;","import Auth from './auth/auth';\r\n\r\nconst Authenticate = () => {\r\n\r\n  return (    \r\n    <Auth />\r\n  );\r\n}\r\n\r\nexport default Authenticate;"],"names":["switchRegister","role","navigate","useNavigate","dispatch","useDispatch","from","useLocation","state","pathname","isLoggedIn","useSelector","selectLoggedIn","useState","email","setEmail","emailIssue","setEmailIssue","password","setPassword","passwordIssue","setPasswordIssue","useEffect","checkGroupValidation","index","ret","message","status","length","test","loginProc","checking","openSnackBar","logUserIn","className","type","value","onChange","e","target","onClick","successRegistered","selectRegistering","selectRegisterSuccess","setRegproc","repassword","setRepassword","businessname","setBusinessname","address","setAddress","postcode","setPostcode","username","setUsername","userpin","setUserpin","repasswordIssue","setRepasswordIssue","businessIssue","setBusinessIssue","addressIssue","setAddressIssue","postcodeIssue","setPostcodeIssue","usernameIssue","setUsernameIssue","pinIssue","setPinIssue","form_groups","currentGroup","setCurrentGroup","refs","reduce","acc","val","i","createRef","totalGroups","scrollToGroup","current","scrollIntoView","behavior","block","inline","nextGroupProc","userService","result","registerUser","token","undefined","prevGroupProc","map","form_group","ref","signFlag","setSignFlag","setRole"],"sourceRoot":""}