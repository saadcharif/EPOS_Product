{"version":3,"file":"static/js/728.eaceeb24.chunk.js","mappings":"8MA6FA,UAnFe,WACb,OAA4BA,EAAAA,EAAAA,MAApBC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACVC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,KAE7BC,EAAAA,EAAAA,YAAU,WAENP,EADa,aAAXF,GACOU,EAAAA,EAAAA,IAAqBT,IAErBU,EAAAA,EAAAA,IAAqBV,GAElC,GAAG,CAACD,EAAQC,IAcZ,OACE,SAAC,IAAM,CAACW,QAAS,sBAAuBC,WAAW,EAAM,UACrD,iBAAKC,UAAU,gBAAe,WAC1B,iBAAKA,UAAU,8BAA6B,WAC1C,iBAAKA,UAAU,8CAA6C,UAAC,2BAClCb,EAAQ,QAAMD,EAAOe,iBAEpC,aAAXf,GAAwB,yBAErBI,EAAUY,KAAI,SAACC,EAAGC,GAChB,OACE,0BACE,iBACEJ,UAAU,kFACVK,QAAS,kBAlBV,SAACF,GACtBf,GAASkB,EAAAA,EAAAA,IAAYH,GACvB,CAgBsCI,CAAeJ,EAAE,EAAC,WAEhC,cAAGH,UAAU,sBAAqB,SAC/BI,KAEH,cAAGJ,UAAU,wCAAuC,SAAEG,EAAEK,SAAWL,EAAEK,SAAWL,EAAEM,iBAP1EL,IAWhB,OAEK,gBAAKJ,UAAU,6CAA4C,SAE5DP,EAASS,KAAI,SAACQ,EAASN,GACnB,OACI,iBAEIJ,UAAU,+GACVK,QAAS,kBA5CnB,SAACM,GACrB,IAAMC,EAAQ,CACZC,UAAWF,EAAEG,IACbC,OAAQ,GAEV3B,GAAS4B,EAAAA,EAAAA,IAAaJ,GACxB,CAsC+CK,CAAcP,EAAQ,EAAC,WAEtC,iBAAKV,UAAU,gEAA+D,WAC5E,eAAIA,UAAU,YAAW,SAAEU,EAAQQ,QACnC,cAAGlB,UAAU,UAAS,SAAEU,EAAQS,eAChC,yBAAG,OAAET,EAAQU,MAAMC,QAAQ,UAE7B,gBAAKrB,UAAU,yEAAwE,UACrF,gBACEsB,IAAG,UAAKC,EAAAA,GAAc,YAAIb,EAAQc,MAAQd,EAAQc,MAAQ,eAC1DxB,UAAU,4EAZTI,EAiBjB,UAIV,SAAC,IAAO,QAIpB,C","sources":["pages/dashboard/search.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Layout from '../../components/Layout';\r\nimport Sidebar from './sidebar';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {selectCustomers, getCustomerByKeyword} from '../../redux/userReducer';\r\nimport { selectClassProducts, getProductsByKeyword } from '../../redux/productReducer';\r\nimport { addCurOrders, setCustomer } from '../../redux/orderReducer';\r\nimport { API_IMAGE_PATH } from '../../config/constants';\r\n\r\nconst Search = () => {\r\n  const { filter, keyword } = useParams();\r\n  const dispatch = useDispatch();\r\n  const customers = useSelector(selectCustomers);\r\n  const products = useSelector(selectClassProducts);\r\n\r\n  useEffect(() => {\r\n    if (filter === 'customer') {\r\n      dispatch(getCustomerByKeyword(keyword));\r\n    } else {\r\n      dispatch(getProductsByKeyword(keyword));\r\n    }\r\n  }, [filter, keyword]);\r\n\r\n  const handleProduct = (p) => {\r\n    const order = {\r\n      productId: p._id,\r\n      amount: 1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handleCustomer = (c) => {\r\n    dispatch(setCustomer(c));\r\n  }\r\n\r\n  return (\r\n    <Layout classes={'bg-[#404040] h-full'} searchBar={false}>\r\n        <div className='flex flex-row'>\r\n            <div className=\"w-full h-[calc(100vh-80px)]\">\r\n              <div className='text-center text-xl text-gray-100 font-bold'>\r\n                The search result with \"{keyword}\" of {filter.toUpperCase()}\r\n              </div>\r\n              {filter === 'customer' ? <div>\r\n                {\r\n                  customers.map((c, index) => {\r\n                    return (\r\n                      <div>\r\n                        <div key={index} \r\n                          className='w-full flex text-gray-100 px-[1rem] leading-[1.8rem] py-[0.5rem] cursor-pointer'\r\n                          onClick={() =>handleCustomer(c)}\r\n                        >\r\n                          <p className='w-[20%] text-center'>\r\n                            {index}  \r\n                          </p>\r\n                          <p className='w-[80%] text-center text-xl font-bold'>{c.username ? c.username : c.businessname}</p>                          \r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                }\r\n              </div> : <div className='grid grid-cols-3 gap-6 px-[2rem] py-[2rem]'>\r\n                  {\r\n                      products.map((product, index) => {\r\n                          return (\r\n                              <div \r\n                                  key={index} \r\n                                  className='w-full h-[9rem] flex flex-row text-xl rounded-[0.6rem] bg-[#D9D9D9] text-gray-800 select-none cursor-pointer'\r\n                                  onClick={() => handleProduct(product)}\r\n                              >\r\n                                  <div className='w-[50%] flex flex-col text-center justify-center items-center'>\r\n                                    <h1 className='font-bold'>{product.name}</h1>\r\n                                    <p className='text-md'>{product.description}</p>                                  \r\n                                    <p>Â£{product.price.toFixed(2)}</p>\r\n                                  </div>                  \r\n                                  <div className='w-[50%] flex flex-col text-center justify-center items-center p-[1rem]'>                \r\n                                    <img \r\n                                      src={`${API_IMAGE_PATH}/${product.photo ? product.photo : \"default.png\"}`} \r\n                                      className='border border-gray-700 w-full h-full my-2 object-fill object-center'\r\n                                    />\r\n                                  </div>\r\n                              </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>}\r\n            </div>\r\n            <Sidebar />\r\n        </div>        \r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Search;"],"names":["useParams","filter","keyword","dispatch","useDispatch","customers","useSelector","selectCustomers","products","selectClassProducts","useEffect","getCustomerByKeyword","getProductsByKeyword","classes","searchBar","className","toUpperCase","map","c","index","onClick","setCustomer","handleCustomer","username","businessname","product","p","order","productId","_id","amount","addCurOrders","handleProduct","name","description","price","toFixed","src","API_IMAGE_PATH","photo"],"sourceRoot":""}