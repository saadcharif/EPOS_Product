{"version":3,"file":"static/js/131.a2e06e1a.chunk.js","mappings":"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","sources":["components/Navbar/index.jsx","components/Layout.jsx","pages/dashboard/merchant_group/modals/carts.modal.jsx","pages/dashboard/merchant_group/modals/waiting.payment.modal.jsx","pages/dashboard/sidebar.jsx"],"sourcesContent":["import { Menu, Transition } from \"@headlessui/react\";\r\nimport { Fragment } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { selectUser, updateTooltip } from '../../redux/userReducer';\r\nimport { API_URL } from '../../config/constants';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Tooltip from 'react-power-tooltip';\r\nimport { getNotification, selectNotifications, updateNotification, updateNotificationShow } from '../../redux/notificationReducer';\r\n\r\nexport const Navbar = ({\r\n  customSettingComponent,\r\n  searchBar = true,\r\n  searchKeyword = '',\r\n  normalBar = false,\r\n  disableRealestate = false\r\n}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const onLogout = (e) => {\r\n    navigate('/logout');\r\n  }\r\n  const [isMore, setIsMore] = useState(false);\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const [keyword, setKeyword] = useState(searchKeyword);\r\n  const notifications = useSelector(selectNotifications);\r\n  const [searchProduct, setSearchProduct] = useState('');\r\n  const [searchCustomer, setSearchCustomer] = useState('');\r\n  const [showBack, setShowBack] = useState(true);\r\n\r\n  const onEditProfile = (e) => {\r\n    navigate('/user/edit');\r\n  }\r\n\r\n  const handleBack = () => {\r\n    navigate('/');\r\n  }\r\n\r\n  const handleSearchProduct = (event) => {\r\n    if (event.code === 'Enter') {\r\n      navigate('/search/product/' + searchProduct);\r\n    }\r\n  }\r\n\r\n  const handleSearchCustomer = (event) => {\r\n    if (event.code === 'Enter') {\r\n      navigate('/search/customer/' + searchCustomer);\r\n    }\r\n  }\r\n\r\n  const handleWallet = () => {\r\n    navigate('/wallet');\r\n  }\r\n\r\n  useEffect (() => {\r\n    if (location.pathname === \"/\") {\r\n      setShowBack(false)\r\n    } else {\r\n      setShowBack(true)\r\n    }\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <div className=\"navbar w-full\">\r\n      <div className=\"flex items-center w-full justify-between\">\r\n        {/* {user && user._id && */}\r\n        <>\r\n          <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mr-5 mt-1\">\r\n            {showBack && <Menu.Button onClick={() => handleBack()} data-tip data-for=\"notificationId\" className=\"inline-flex w-full justify-center rounded-md text-sm text-gray-400 hover:text-gray-100\">\r\n              <FontAwesomeIcon icon={faCaretLeft} className=\"text-3xl\"/>\r\n            </Menu.Button>}\r\n          </Menu>\r\n\r\n          {searchBar && (\r\n            <>\r\n              <input \r\n                    className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[30%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"search\"\r\n                    placeholder='Search Product'\r\n                    value={searchProduct}\r\n                    onChange={(e) => setSearchProduct(e.target.value)}\r\n                    onKeyUp={(e) => handleSearchProduct(e)} />\r\n              <input \r\n                    className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[30%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"search\"\r\n                    placeholder='Search Customer'\r\n                    value={searchCustomer}\r\n                    onChange={(e) => setSearchCustomer(e.target.value)}\r\n                    onKeyUp={(e) => handleSearchCustomer(e)} />\r\n            </>\r\n          )}\r\n          \r\n          <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mt-1\">\r\n            <Menu.Button className=\"inline-flex w-full justify-center rounded-md text-sm text-gray-400 hover:text-app-black\">\r\n              <FontAwesomeIcon icon={faUser} className=\"text-4xl\"/>\r\n            </Menu.Button>\r\n\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-100\"\r\n              enterFrom=\"transform opacity-0 scale-95\"\r\n              enterTo=\"transform opacity-100 scale-100\"\r\n              leave=\"transition ease-in duration-75\"\r\n              leaveFrom=\"transform opacity-100 scale-100\"\r\n              leaveTo=\"transform opacity-0 scale-95\"\r\n            >\r\n              <Menu.Items className=\"absolute right-0 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-sm bg-white shadow-lg ring-2 ring-gray-200 focus:outline-none z-10\">\r\n                <div className=\"px-1 py-1 \">\r\n                  {user && <div className=\"bg-[#606060] text-gray-100 py-2 text-center font-bold\">\r\n                    {(user.userproxy && user.userproxy.length > 0) ? user.userproxy[0].username : user.businessname}\r\n                  </div>}\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                        onClick={()=>handleWallet()}\r\n                      >\r\n                        Wallet\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                        onClick={(e) => onLogout(e)}\r\n                      >\r\n                        Logout\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                </div>\r\n              </Menu.Items>\r\n            </Transition>\r\n          </Menu>\r\n        </>\r\n        {/* } */}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navbar } from './Navbar';\r\n\r\nconst Layout = ({\r\n  children,\r\n  showNavbar = true,\r\n  navbarCustomSettingComponent,\r\n  layoutClass = 'bg-app-form-border',\r\n  searchBar,\r\n  searchKeyword,\r\n  showNormal = false,\r\n  noRealestate = false,\r\n  classes = ''\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // const init = async () => {\r\n    //   const queryOpts = { name: 'clipboard-read', allowWithoutGesture: false };\r\n    //   await navigator.permissions.query(queryOpts);\r\n    //   // Will be 'granted', 'denied' or 'prompt':\r\n    // }\r\n    // init();\r\n  }, [])\r\n  return (\r\n    <div className={`w-full min-h-screen bg-[#404040] ${layoutClass}`}>\r\n      {showNavbar && (\r\n        showNormal ? \r\n        <div className=\"px-6 md:px-10 lg:px-12 py-2\">\r\n          <Navbar normalBar={true} disableRealestate={noRealestate}/>\r\n        </div> :\r\n        <div className=\"px-6 md:px-10 lg:px-12 py-2\">\r\n          <Navbar\r\n            customSettingComponent={navbarCustomSettingComponent}\r\n            searchBar={searchBar}\r\n            searchKeyword={searchKeyword}\r\n            disableRealestate={noRealestate}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className={`${classes}`}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openSnackBar } from '../../../../redux/snackBarReducer';\r\n\r\nconst CartsModal = ({isModal, setIsModal, cartsLink, registerFlag, handleRegister}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('')\r\n\r\n  const handleConfirm = () => {\r\n    if (name.length === 0) {\r\n      dispatch(openSnackBar({ message: \"Type saved order name.\", status: 'error' }));\r\n      return;\r\n    }\r\n\r\n    if (registerFlag) {\r\n      handleRegister(name);\r\n    } else {\r\n      navigate(cartsLink + '/' + name);\r\n    }\r\n    setIsModal(false);\r\n  }\r\n\r\n  const handleKeyEvent = (e) => {\r\n    if (e.code === 'Enter') {\r\n      handleConfirm();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isModal) {\r\n      setName('')\r\n    }\r\n  }, [isModal]);\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Enter a name for the saved order:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                  <input \r\n                    className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    onKeyUp={(e) => handleKeyEvent(e)} />\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#404040] border border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                      onClick={() => setIsModal(false)}\r\n                  >Cancel</button>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                      onClick={() => handleConfirm()}\r\n                  >Confirm</button>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default CartsModal;","import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser } from '../../../../redux/userReducer';\r\nimport { QRCodeSVG } from 'qrcode.react';\r\nimport { paymentedOrder, selectWaitingPaymentID } from '../../../../redux/orderReducer';\r\nimport { ordersService } from '../../../../services/orders.service';\r\nimport { COIN_TYPES, API_BASE } from '../../../../config/constants';\r\n\r\nconst WaitingPaymentModal = ({isModal, setIsModal, cposOrdered}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');  \r\n  const user = useSelector(selectUser);\r\n  const paymentID = useSelector(selectWaitingPaymentID);\r\n\r\n  const handlePaymentCompleted = () => {   \r\n    dispatch(paymentedOrder(paymentID));\r\n  }\r\n\r\n  const getPaymentStatus = async (id) => {\r\n    while(true) {\r\n      const ret = await ordersService.paystatusOrder(id);\r\n      if (ret.data.payment) {\r\n        setIsModal(false);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect (() => {\r\n    if (paymentID != 0) {\r\n      getPaymentStatus(paymentID)\r\n    }\r\n  }, [paymentID])\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Waiting for payment:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] py-[1rem] flex justify-center mb-[1rem]\">\r\n                  <QRCodeSVG \r\n                      value={user ? user.walpublic : '0x0000000000'}\r\n                      level=\"H\"\r\n                      size={256}\r\n                  />                  \r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  {cposOrdered.coinAmount && <h1 className='text-md text-left text-[#D9D9D9] select-none'>Amount: {cposOrdered.coinAmount.toFixed(2)} {COIN_TYPES[cposOrdered.coinType]}</h1>}\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default WaitingPaymentModal;","import {useState, useEffect, createRef} from 'react';\r\nimport { selectUser } from '../../redux/userReducer';\r\nimport { selectCurOrders, selectCurCount, selectCoinType, addCurOrders, cleanCurOrders, selectVAT, setCoinType, selectCurrentGroup, setCurrentGroup } from '../../redux/orderReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faFloppyDisk, faMinus, faPlus, faCaretLeft, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { selectProducts, getProducts } from '../../redux/productReducer';\r\nimport { floatAdd, floatMul, getCoinAmount } from '../../utils/utils';\r\n// import ReactTooltip from \"react-tooltip\";\r\nimport { SUPPORT_COINS } from \"../../config/constants\";\r\nimport { QRCodeSVG } from 'qrcode.react';\r\n// import { Link } from 'react-router-dom';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { selectCustomer, updateOrderData } from '../../redux/orderReducer';\r\nimport CartsModal from './merchant_group/modals/carts.modal';\r\nimport { COIN_EXPLORER_LINK } from '../../config/constants';\r\nimport {\r\n    selectCoinAllowBTC,\r\n    selectCoinAllowETH,\r\n    selectCoinAllowBNB,\r\n    selectCoinAllowXRP,\r\n    selectCoinAllowUSDT,\r\n    selectCoinAllowCPOS\r\n} from '../../redux/settingReducer';\r\nimport WaitingPaymentModal from './merchant_group/modals/waiting.payment.modal';\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const orders = useSelector(selectCurOrders);\r\n  const orderCount = useSelector(selectCurCount);\r\n  const products = useSelector(selectProducts);\r\n  const vat = useSelector(selectVAT);\r\n  const coinType = useSelector(selectCoinType);\r\n  const customer = useSelector(selectCustomer);\r\n  const [subtotalCost, setSubTotalCost] = useState(0);\r\n  const [cartsModal, setCartsModal] = useState(false);\r\n  const [paymentModal, setPaymentModal] = useState(false);\r\n  const coinBTC = useSelector(selectCoinAllowBTC);\r\n  const coinETH = useSelector(selectCoinAllowETH);\r\n  const coinBNB = useSelector(selectCoinAllowBNB);\r\n  const coinXRP = useSelector(selectCoinAllowXRP);\r\n  const coinUSDT = useSelector(selectCoinAllowUSDT);\r\n  const coinCPOS = useSelector(selectCoinAllowCPOS);\r\n  const [cposOrdered, setCposOrdered] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let cost = 0;\r\n    orders.map((o, index) => {\r\n        const p = getProduct(o.productId);\r\n        cost = floatAdd(cost, floatMul(p.price, o.amount));\r\n    });\r\n    setSubTotalCost(cost);\r\n    \r\n  }, [orderCount])\r\n\r\n  const getProduct = (id) => {\r\n    const p = products.filter((e) => e._id === id);\r\n    return p[0];\r\n  }\r\n\r\n  const handleMinus = (p) => {\r\n    const order = {\r\n        productId: p._id,\r\n        amount: -1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handlePlus = (p) => {\r\n    const order = {\r\n        productId: p._id,\r\n        amount: 1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handleClear = () => {\r\n    scrollToGroup(0);\r\n    dispatch(cleanCurOrders());\r\n  }\r\n\r\n  const handleSave = (name) => {\r\n    const order = {\r\n        name: name,\r\n        merchantId: user._id,\r\n        customerId: customer._id,\r\n        order: orders,\r\n        coinType: coinType,\r\n        coinAmount: getCoinAmount(coinType, subtotalCost, vat)\r\n    };\r\n    dispatch(updateOrderData(0, order));\r\n    scrollToGroup(0);\r\n    dispatch(cleanCurOrders());\r\n  }\r\n\r\n  const handleCoinType = (type) => {\r\n    dispatch(setCoinType(type));\r\n  }\r\n\r\n  const getCoinValidate = (index) => {\r\n      let valid = false;\r\n      switch (index) {\r\n          case 0:\r\n              valid = coinBTC;\r\n              break;\r\n          case 1:\r\n              valid = coinETH;\r\n              break;\r\n          case 2:\r\n              valid = coinBNB;\r\n              break;\r\n          case 3:\r\n              valid = coinXRP;\r\n              break;\r\n          case 4:\r\n              valid = coinUSDT;\r\n              break;\r\n          case 5:\r\n              valid = coinCPOS;\r\n              break;\r\n      }\r\n\r\n      return valid;\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToGroup(currentGroup, false);\r\n  }, [])\r\n\r\n  const form_groups = [\r\n    <div className='w-full h-full overflow-x-auto text-[#404040]'>\r\n        {\r\n            orders.map((o, index) => {\r\n                const p = getProduct(o.productId);\r\n                return (\r\n                    <div key={index} className=\"border-b border-gray-900 py-4\">    \r\n                        <div className='flex justify-between text-md'>\r\n                            <div>{p.name}</div>\r\n                            <div>{p.price.toFixed(2)}</div>\r\n                        </div>\r\n                        <div className='flex justify-between text-sm'>\r\n                            <div>SKU: {p.sku}</div>\r\n                            <div className='flex justify-center items-center'>\r\n                                <FontAwesomeIcon \r\n                                    icon={faMinus}\r\n                                    className=\"cursor-pointer\"\r\n                                    onClick={()=>handleMinus(p)}\r\n                                />\r\n                                <p className='px-2 select-none'>{o.amount}</p>\r\n                                <FontAwesomeIcon \r\n                                    icon={faPlus} \r\n                                    className=\"cursor-pointer\"\r\n                                    onClick={()=>handlePlus(p)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    </div>,\r\n    <div className='w-full h-full grid grid-cols-2 gap-2 text-center py-[2rem] px-[2rem]'>\r\n        {\r\n            SUPPORT_COINS.map((item, index) => {\r\n                const valid = getCoinValidate(index)\r\n                return (\r\n                valid ? <div key={index} onClick={() => handleCoinType(index)} className={`w-[8rem] h-[8rem] flex justify-center items-center ${coinType === index ? 'bg-[#B9B9B9]':''} border border-[#404040] text-[#404040] rounded-[1rem] select-none cursor-pointer`}>\r\n                    <p className='w-[60%]'>{item}</p>\r\n                </div> : <div key={index}></div>\r\n                )\r\n            })\r\n        }\r\n    </div>,\r\n    <div className='w-full h-full'>\r\n        <div className='w-full h-[5rem]'>            \r\n        </div>\r\n        <div className='w-full flex justify-center'>            \r\n            <QRCodeSVG \r\n                value={user ? user.walpublic : '0x0000000000'}\r\n                level=\"H\"\r\n                size={256}\r\n            />\r\n        </div>\r\n        <div className='w-full text-center'>\r\n            <p className='text-red-600 text-md my-[1rem]'>Please ensure block is confirmed before parting with goods/rendering services.</p>\r\n            {user && <p className='text-[#404040] font-bold text-md my-[1rem]'>Check status of transaction here: <a href={`${COIN_EXPLORER_LINK[coinType]}${user.walpublic}`}>{`${COIN_EXPLORER_LINK[coinType]}${user.walpublic}`}</a></p>}\r\n        </div>\r\n    </div>\r\n  ]\r\n\r\n  const currentGroup = useSelector(selectCurrentGroup);\r\n\r\n  const refs = form_groups.reduce((acc, val, i) => {\r\n    acc[i] = createRef();\r\n    return acc;\r\n  }, {});\r\n\r\n  const totalGroups = form_groups.length;\r\n  const scrollToGroup = (i, mode=true) => {\r\n    dispatch(setCurrentGroup(i));\r\n    refs[i].current.scrollIntoView({\r\n      behavior: mode ? 'smooth':'instant',\r\n      block: 'nearest',\r\n      inline: 'start',\r\n    });\r\n  };\r\n  const nextGroup = () => {\r\n    if (currentGroup >= totalGroups - 1) {\r\n      scrollToGroup(0);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup + 1);\r\n    }\r\n  };\r\n  \r\n  const previousGroup = () => {\r\n    if (currentGroup === 0) {\r\n      scrollToGroup(totalGroups - 1);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextGroup = async () => {\r\n    if (currentGroup === 0) {\r\n        if (orders.length === 0) {\r\n            dispatch(openSnackBar({ message: \"Empty orders.\", status: 'error' }));\r\n            return;\r\n        }\r\n        if (!customer) {\r\n            dispatch(openSnackBar({ message: \"Select customer.\", status: 'error' }));\r\n            return;\r\n        }\r\n    }\r\n    if (currentGroup === 2) {\r\n        /// waiting receive payment\r\n        const order = {\r\n            name: \"cpos_ordered\",\r\n            merchantId: user._id,\r\n            customerId: customer._id,\r\n            order: orders,\r\n            coinType: coinType,\r\n            coinAmount: await getCoinAmount(coinType, subtotalCost, vat)\r\n        };\r\n        setCposOrdered(order);\r\n        setPaymentModal(true);\r\n        dispatch(updateOrderData(0, order));\r\n        dispatch(cleanCurOrders());\r\n    }\r\n\r\n    nextGroup();\r\n  }\r\n\r\n  const handlePrevGroup = () => {\r\n    previousGroup();\r\n  }\r\n\r\n  const getHandleTitle = () => {\r\n    let ret = \"\";\r\n    switch (currentGroup) {\r\n        case 0:\r\n            ret = \"Checkout\"\r\n            break;\r\n        case 1:\r\n            ret = \"Generate QR\"\r\n            break;\r\n        case 2:\r\n            ret = \"Complete Order\"\r\n            break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  const getSidebarTitle = () => {\r\n    let ret = \"\";\r\n    switch (currentGroup) {\r\n        case 0:\r\n            ret = customer ? customer.businessname : '';\r\n            break;\r\n        case 1:\r\n            ret = \"Select crypto:\"\r\n            break;\r\n        case 2:\r\n            ret = \"Customer to scan QR to complete order:\"\r\n            break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  return (\r\n    <div className='bg-[#D9D9D9] h-[calc(100vh-80px)] w-[0px] sm:w-[360px] md:w-[360px] lg:w-[360px] xl:w-[360px] transition-all'>\r\n        <div className='w-full h-full relative'>\r\n            <div className='w-full h-[2rem] flex items-center text-[#404040]'>\r\n                {currentGroup!==0 && <button \r\n                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}\r\n                    onClick={() => handlePrevGroup()}\r\n                ><FontAwesomeIcon icon={faCaretLeft}/></button>}\r\n                {currentGroup===0 && <button \r\n                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}\r\n                ><FontAwesomeIcon icon={faUser}/></button>}\r\n                <p>{getSidebarTitle()}</p>\r\n            </div>\r\n            <div className='w-full h-[68vh] px-4'>\r\n                <div className='relative w-full h-full'>\r\n                    <div className=\"carousel w-full h-full\">\r\n                        {form_groups.map((form_group, i) => {\r\n                            return (\r\n                            <div className='w-full h-full flex-shrink-0' key={i} ref={refs[i]}>  \r\n                                {form_group} \r\n                            </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='w-full absolute bottom-0 px-6 py-2 text-[#404040]'>\r\n                <div className='flex justify-between'>\r\n                    <p>Subtotal</p>\r\n                    <p>{subtotalCost.toFixed(2)}</p>                    \r\n                </div>\r\n                <div className='flex justify-between'>\r\n                    <p>VAT (@{floatMul(vat, 100)}%)</p>\r\n                    <p>{floatMul(subtotalCost, vat).toFixed(2)}</p>\r\n                </div>\r\n                <div className='flex justify-between font-bold'>\r\n                    <p>Total</p>\r\n                    <p>{floatAdd(subtotalCost, floatMul(subtotalCost, -vat)).toFixed(2)}</p>\r\n                </div>\r\n                <div className='flex justify-between mt-2'>\r\n                    <div className='flex justify-between gap-2'>                        \r\n                        <button \r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}\r\n                            onClick={() => handleClear()}\r\n                        ><FontAwesomeIcon icon={faTrash}/></button>\r\n                        <button \r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                            onClick={() => {                                \r\n                                if (orders.length === 0) {\r\n                                    dispatch(openSnackBar({ message: \"Empty orders.\", status: 'error' }));\r\n                                    return;\r\n                                }\r\n                                if (!customer) {\r\n                                    dispatch(openSnackBar({ message: \"Select customer.\", status: 'error' }));\r\n                                    return;\r\n                                }\r\n                                setCartsModal(true);\r\n                            }}\r\n                        ><FontAwesomeIcon icon={faFloppyDisk}/></button>\r\n                        {/* { currentGroup === 0 && <button \r\n                            data-tip data-for=\"percentId\"\r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                        ><FontAwesomeIcon icon={faPercent}/></button>} */}\r\n                        {/* <ReactTooltip \r\n                            id=\"percentId\" \r\n                            place=\"top\" // top, right, bottom, left\r\n                            type=\"dark\"  // dark, success, warning, error, info, light\r\n                            effect=\"solid\" // float, solid\r\n                            clickable={true}\r\n                        >\r\n                            <div className='grid grid-cols-3 gap-2'>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.05))}\r\n                                >5%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.1))}\r\n                                >10%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.15))}\r\n                                >15%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.2))}\r\n                                >20%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.25))}\r\n                                >25%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-[0.4rem] rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                >Custom</button>\r\n                            </div>\r\n                        </ReactTooltip> */}\r\n                        \r\n                    </div>\r\n                    <button \r\n                        className={`w-[9rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}  \r\n                        onClick={() => handleNextGroup()}          \r\n                    >{getHandleTitle()}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <CartsModal isModal={cartsModal} setIsModal={setCartsModal} registerFlag={true} handleRegister={handleSave}/>\r\n        <WaitingPaymentModal isModal={paymentModal} setIsModal={setPaymentModal} cposOrdered={cposOrdered}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;"],"names":["Navbar","customSettingComponent","searchBar","searchKeyword","navigate","normalBar","disableRealestate","useNavigate","location","useLocation","useState","user","useSelector","selectUser","useDispatch","selectNotifications","searchProduct","setSearchProduct","searchCustomer","setSearchCustomer","showBack","setShowBack","useEffect","pathname","className","as","onClick","icon","faCaretLeft","type","placeholder","value","onChange","e","target","onKeyUp","code","faUser","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","userproxy","length","username","businessname","active","children","showNavbar","navbarCustomSettingComponent","layoutClass","showNormal","noRealestate","classes","isModal","setIsModal","cartsLink","registerFlag","handleRegister","dispatch","name","setName","handleConfirm","openSnackBar","message","status","appear","show","onClose","handleKeyEvent","cposOrdered","paymentID","selectWaitingPaymentID","getPaymentStatus","id","ordersService","data","payment","walpublic","level","size","coinAmount","toFixed","COIN_TYPES","coinType","orders","selectCurOrders","orderCount","selectCurCount","products","selectProducts","vat","selectVAT","selectCoinType","customer","selectCustomer","subtotalCost","setSubTotalCost","cartsModal","setCartsModal","paymentModal","setPaymentModal","coinBTC","selectCoinAllowBTC","coinETH","selectCoinAllowETH","coinBNB","selectCoinAllowBNB","coinXRP","selectCoinAllowXRP","coinUSDT","selectCoinAllowUSDT","coinCPOS","selectCoinAllowCPOS","setCposOrdered","getProducts","cost","map","o","index","p","getProduct","productId","floatAdd","floatMul","price","amount","filter","_id","scrollToGroup","currentGroup","form_groups","sku","faMinus","order","addCurOrders","handleMinus","faPlus","handlePlus","SUPPORT_COINS","item","valid","getCoinValidate","setCoinType","href","COIN_EXPLORER_LINK","selectCurrentGroup","refs","reduce","acc","val","i","createRef","totalGroups","mode","setCurrentGroup","current","scrollIntoView","behavior","block","inline","handleNextGroup","getCoinAmount","merchantId","customerId","updateOrderData","cleanCurOrders","handlePrevGroup","ret","getSidebarTitle","form_group","ref","faTrash","faFloppyDisk","getHandleTitle"],"sourceRoot":""}