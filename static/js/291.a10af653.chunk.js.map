{"version":3,"file":"static/js/291.a10af653.chunk.js","mappings":"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","sources":["components/Navbar/index.jsx","components/Layout.jsx","pages/dashboard/merchant_group/carts.modal.jsx","pages/dashboard/sidebar.jsx"],"sourcesContent":["import { Menu, Transition } from \"@headlessui/react\";\r\nimport { Fragment } from \"react\";\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { selectUser, updateTooltip } from '../../redux/userReducer';\r\nimport { API_URL } from '../../config/constants';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Tooltip from 'react-power-tooltip';\r\nimport { getNotification, selectNotifications, updateNotification, updateNotificationShow } from '../../redux/notificationReducer';\r\n\r\nexport const Navbar = ({\r\n  customSettingComponent,\r\n  searchBar = true,\r\n  searchKeyword = '',\r\n  normalBar = false,\r\n  disableRealestate = false\r\n}) => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onLogout = (e) => {\r\n    navigate('/logout');\r\n  }\r\n  const [isMore, setIsMore] = useState(false);\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const [keyword, setKeyword] = useState(searchKeyword);\r\n  const notifications = useSelector(selectNotifications);\r\n  const [searchProduct, setSearchProduct] = useState('');\r\n  const [searchCustomer, setSearchCustomer] = useState('');\r\n\r\n  const onEditProfile = (e) => {\r\n    navigate('/user/edit');\r\n  }\r\n\r\n  const handleBack = () => {\r\n    navigate(-1);\r\n  }\r\n\r\n  const handleSearchProduct = (event) => {\r\n    if (event.code === 'Enter') {\r\n      navigate('/search/product/' + searchProduct);\r\n    }\r\n  }\r\n\r\n  const handleSearchCustomer = (event) => {\r\n    if (event.code === 'Enter') {\r\n      navigate('/search/customer/' + searchCustomer);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar w-full\">\r\n      <div className=\"flex items-center w-full justify-between\">\r\n        {/* {user && user._id && */}\r\n        <>\r\n          <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mr-5 mt-1\">\r\n            <Menu.Button onClick={() => handleBack()} data-tip data-for=\"notificationId\" className=\"inline-flex w-full justify-center rounded-md text-sm text-gray-400 hover:text-gray-100\">\r\n              <FontAwesomeIcon icon={faCaretLeft} className=\"text-3xl\"/>\r\n            </Menu.Button>\r\n          </Menu>\r\n\r\n          {searchBar && (\r\n            <>\r\n              <input \r\n                    className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[30%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"search\"\r\n                    placeholder='Search Product'\r\n                    value={searchProduct}\r\n                    onChange={(e) => setSearchProduct(e.target.value)}\r\n                    onKeyUp={(e) => handleSearchProduct(e)} />\r\n              <input \r\n                    className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[30%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"search\"\r\n                    placeholder='Search Customer'\r\n                    value={searchCustomer}\r\n                    onChange={(e) => setSearchCustomer(e.target.value)}\r\n                    onKeyUp={(e) => handleSearchCustomer(e)} />\r\n            </>\r\n          )}\r\n          \r\n          <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mt-1\">\r\n            <Menu.Button className=\"inline-flex w-full justify-center rounded-md text-sm text-gray-400 hover:text-app-black\">\r\n              <FontAwesomeIcon icon={faUser} className=\"text-4xl\"/>\r\n            </Menu.Button>\r\n\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-100\"\r\n              enterFrom=\"transform opacity-0 scale-95\"\r\n              enterTo=\"transform opacity-100 scale-100\"\r\n              leave=\"transition ease-in duration-75\"\r\n              leaveFrom=\"transform opacity-100 scale-100\"\r\n              leaveTo=\"transform opacity-0 scale-95\"\r\n            >\r\n              <Menu.Items className=\"absolute right-0 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-sm bg-white shadow-lg ring-2 ring-gray-200 focus:outline-none z-10\">\r\n                <div className=\"px-1 py-1 \">\r\n                  {user && <div className=\"bg-[#606060] text-gray-100 py-2 text-center font-bold\">\r\n                    {user.username ? user.username : user.businessname}\r\n                  </div>}\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                      >\r\n                        Wallet\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                        onClick={(e) => onLogout(e)}\r\n                      >\r\n                        Logout\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                </div>\r\n              </Menu.Items>\r\n            </Transition>\r\n          </Menu>\r\n        </>\r\n        {/* } */}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navbar } from './Navbar';\r\n\r\nconst Layout = ({\r\n  children,\r\n  showNavbar = true,\r\n  navbarCustomSettingComponent,\r\n  layoutClass = 'bg-app-form-border',\r\n  searchBar,\r\n  searchKeyword,\r\n  showNormal = false,\r\n  noRealestate = false,\r\n  classes = ''\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const queryOpts = { name: 'clipboard-read', allowWithoutGesture: false };\r\n      await navigator.permissions.query(queryOpts);\r\n      // Will be 'granted', 'denied' or 'prompt':\r\n    }\r\n    init();\r\n  }, [])\r\n  return (\r\n    <div className={`w-full min-h-screen bg-[#404040] ${layoutClass}`}>\r\n      {showNavbar && (\r\n        showNormal ? \r\n        <div className=\"px-6 md:px-10 lg:px-12 py-2\">\r\n          <Navbar normalBar={true} disableRealestate={noRealestate}/>\r\n        </div> :\r\n        <div className=\"px-6 md:px-10 lg:px-12 py-2\">\r\n          <Navbar\r\n            customSettingComponent={navbarCustomSettingComponent}\r\n            searchBar={searchBar}\r\n            searchKeyword={searchKeyword}\r\n            disableRealestate={noRealestate}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className={`${classes}`}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerSuccess, selectRegisterSuccess } from '../../../redux/authReducer';\r\n\r\nconst CartsModal = ({isModal, setIsModal, cartsLink, registerFlag, handleRegister}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('')\r\n\r\n  const handleConfirm = () => {\r\n    if (registerFlag) {\r\n      handleRegister(name);\r\n    } else {\r\n      navigate(cartsLink + '/' + name);\r\n    }\r\n    setIsModal(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isModal) {\r\n      setName('')\r\n    }\r\n  }, [isModal]);\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Enter a name for the saved order:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                  <input \r\n                    className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)} />\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#404040] border border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                      onClick={() => setIsModal(false)}\r\n                  >Cancel</button>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                      onClick={() => handleConfirm()}\r\n                  >Confirm</button>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default CartsModal;","import {useState, useEffect, createRef} from 'react';\r\nimport { selectUser } from '../../redux/userReducer';\r\nimport { selectCurOrders, selectCurCount, selectCoinType, addCurOrders, cleanCurOrders, selectVAT, setVAT, setCoinType } from '../../redux/orderReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClipboard, faFloppyDisk, faPercent, faMinus, faPlus, faCaretLeft, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { selectProducts, getProducts } from '../../redux/productReducer';\r\nimport { floatAdd, floatMul } from '../../utils/utils';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { SUPPORT_COINS } from \"../../config/constants\";\r\nimport {QRCodeSVG } from 'qrcode.react';\r\nimport { Link } from 'react-router-dom';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { selectCustomer, updateOrderData } from '../../redux/orderReducer';\r\nimport CartsModal from './merchant_group/carts.modal';\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const orders = useSelector(selectCurOrders);\r\n  const orderCount = useSelector(selectCurCount);\r\n  const products = useSelector(selectProducts);\r\n  const vat = useSelector(selectVAT);\r\n  const coinType = useSelector(selectCoinType);\r\n  const customer = useSelector(selectCustomer);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [cartsModal, setCartsModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let cost = 0;\r\n    orders.map((o, index) => {\r\n        const p = getProduct(o.productId);\r\n        cost = floatAdd(cost, floatMul(p.price, o.amount));\r\n    });\r\n    setTotalCost(cost);\r\n    \r\n  }, [orderCount])\r\n\r\n  const getProduct = (id) => {\r\n    const p = products.filter((e) => e._id === id);\r\n    return p[0];\r\n  }\r\n\r\n  const handleMinus = (p) => {\r\n    const order = {\r\n        productId: p._id,\r\n        amount: -1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handlePlus = (p) => {\r\n    const order = {\r\n        productId: p._id,\r\n        amount: 1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handleClear = () => {\r\n    dispatch(cleanCurOrders());\r\n  }\r\n\r\n  const handleSave = (name) => {\r\n    const order = {\r\n        name: name,\r\n        merchantId: user._id,\r\n        customerId: customer._id,\r\n        order: orders,\r\n        coinType: coinType,\r\n        coinAmount: 0.2\r\n    };\r\n    dispatch(updateOrderData(0, order));\r\n    dispatch(cleanCurOrders());\r\n  }\r\n\r\n  const handleCoinType = (type) => {\r\n    dispatch(setCoinType(type));\r\n  }\r\n\r\n  const form_groups = [\r\n    <div className='w-full h-full overflow-x-auto'>\r\n        {\r\n            orders.map((o, index) => {\r\n                const p = getProduct(o.productId);\r\n                return (\r\n                    <div key={index} className=\"border-b border-gray-700 py-4\">    \r\n                        <div className='flex justify-between text-md'>\r\n                            <div>{p.name}</div>\r\n                            <div>{p.price}</div>\r\n                        </div>\r\n                        <div className='flex justify-between text-sm'>\r\n                            <div>SKU: 12345617872</div>\r\n                            <div className='flex justify-center items-center'>\r\n                                <FontAwesomeIcon \r\n                                    icon={faMinus}\r\n                                    className=\"cursor-pointer\"\r\n                                    onClick={()=>handleMinus(p)}\r\n                                />\r\n                                <p className='px-2 select-none'>{o.amount}</p>\r\n                                <FontAwesomeIcon \r\n                                    icon={faPlus} \r\n                                    className=\"cursor-pointer\"\r\n                                    onClick={()=>handlePlus(p)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    </div>,\r\n    <div className='w-full h-full grid grid-cols-2 gap-2 text-center py-[2rem] px-[2rem]'>\r\n        {\r\n            SUPPORT_COINS.map((item, index) => {\r\n                return (\r\n                <div key={index} onClick={() => handleCoinType(index)} className={`w-[8rem] h-[8rem] flex justify-center items-center ${coinType === index ? 'bg-[#B9B9B9]':''} border border-[#404040] text-[#404040] rounded-[1rem] select-none cursor-pointer`}>\r\n                    <p className='w-[60%]'>{item}</p>\r\n                </div>\r\n                )\r\n            })\r\n        }\r\n    </div>,\r\n    <div className='w-full h-full'>\r\n        <div className='w-full h-[8rem]'>            \r\n        </div>\r\n        <div className='w-full flex justify-center'>            \r\n            <QRCodeSVG \r\n                value={user ? user.walpublic : '0x0000000000'}\r\n                level=\"H\"\r\n                size={256}\r\n            />\r\n        </div>\r\n        <div className='w-full text-center'>\r\n            <p className='text-red-600 text-md my-[1rem]'>Please ensure block is confirmed before parting with goods/rendering services.</p>\r\n            <p className='text-[#404040] font-bold text-md my-[1rem]'>Check status of transaction here: <Link href=\"https://etherscan.io/\">https://etherscan.io/</Link></p>\r\n        </div>\r\n    </div>\r\n  ]\r\n\r\n  const [currentGroup, setCurrentGroup] = useState(0);\r\n\r\n  const refs = form_groups.reduce((acc, val, i) => {\r\n    acc[i] = createRef();\r\n    return acc;\r\n  }, {});\r\n\r\n  const totalGroups = form_groups.length;\r\n  const scrollToGroup = i => {\r\n    setCurrentGroup(i);\r\n    refs[i].current.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'nearest',\r\n      inline: 'start',\r\n    });\r\n  };\r\n  const nextGroup = () => {\r\n    if (currentGroup >= totalGroups - 1) {\r\n      scrollToGroup(0);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup + 1);\r\n    }\r\n  };\r\n  const previousGroup = () => {\r\n    if (currentGroup === 0) {\r\n      scrollToGroup(totalGroups - 1);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextGroup = () => {\r\n    if (currentGroup === 0) {\r\n        if (orders.length === 0) {\r\n            dispatch(openSnackBar({ message: \"Empty orders.\", status: 'error' }));\r\n            return;\r\n        }\r\n        if (!customer) {\r\n            dispatch(openSnackBar({ message: \"Select customer.\", status: 'error' }));\r\n            return;\r\n        }\r\n    }\r\n    if (currentGroup === 2) {\r\n        dispatch(cleanCurOrders());\r\n    }\r\n\r\n    nextGroup();\r\n  }\r\n\r\n  const handlePrevGroup = () => {\r\n    previousGroup();\r\n  }\r\n\r\n  const getHandleTitle = () => {\r\n    let ret = \"\";\r\n    switch (currentGroup) {\r\n        case 0:\r\n            ret = \"Checkout\"\r\n            break;\r\n        case 1:\r\n            ret = \"Generate QR\"\r\n            break;\r\n        case 2:\r\n            ret = \"Complete Order\"\r\n            break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  const getSidebarTitle = () => {\r\n    let ret = \"\";\r\n    switch (currentGroup) {\r\n        case 0:\r\n            ret = customer ? customer.username : '';\r\n            break;\r\n        case 1:\r\n            ret = \"Select crypto:\"\r\n            break;\r\n        case 2:\r\n            ret = \"Customer to scan QR to complete order:\"\r\n            break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  return (\r\n    <div className='bg-[#D9D9D9] h-[calc(100vh-62px)] w-[0px] sm:w-[360px] md:w-[360px] lg:w-[360px] xl:w-[360px] transition-all'>\r\n        <div className='w-full h-full relative'>\r\n            <div className='w-full h-[2rem] flex items-center'>\r\n                {currentGroup!==0 && <button \r\n                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}\r\n                    onClick={() => handlePrevGroup()}\r\n                ><FontAwesomeIcon icon={faCaretLeft}/></button>}\r\n                {currentGroup===0 && <button \r\n                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}\r\n                ><FontAwesomeIcon icon={faUser}/></button>}\r\n                <p>{getSidebarTitle()}</p>\r\n            </div>\r\n            <div className='w-full h-[68vh] px-4'>\r\n                <div className='relative w-full h-full'>\r\n                    <div className=\"carousel w-full h-full\">\r\n                        {form_groups.map((form_group, i) => {\r\n                            return (\r\n                            <div className='w-full h-full flex-shrink-0' key={i} ref={refs[i]}>  \r\n                                {form_group} \r\n                            </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='w-full absolute bottom-0 px-6 py-2'>\r\n                <div className='flex justify-between'>\r\n                    <p>Subtotal</p>\r\n                    <p>{floatAdd(totalCost, floatMul(totalCost, -vat))}</p>\r\n                </div>\r\n                <div className='flex justify-between'>\r\n                    <p>VAT (@{floatMul(vat, 100)}%)</p>\r\n                    <p>{floatMul(totalCost, vat)}</p>\r\n                </div>\r\n                <div className='flex justify-between font-bold'>\r\n                    <p>Total</p>\r\n                    <p>{totalCost}</p>\r\n                </div>\r\n                <div className='flex justify-between mt-2'>\r\n                    <div className='flex justify-between gap-2'>                        \r\n                        <button \r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}\r\n                            onClick={() => handleClear()}\r\n                        ><FontAwesomeIcon icon={faClipboard}/></button>\r\n                        <button \r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                            onClick={() => setCartsModal(true)}\r\n                        ><FontAwesomeIcon icon={faFloppyDisk}/></button>\r\n                        { currentGroup === 0 && <button \r\n                            data-tip data-for=\"percentId\"\r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                        ><FontAwesomeIcon icon={faPercent}/></button>}\r\n                        <ReactTooltip \r\n                            id=\"percentId\" \r\n                            place=\"top\" // top, right, bottom, left\r\n                            type=\"dark\"  // dark, success, warning, error, info, light\r\n                            effect=\"solid\" // float, solid\r\n                            clickable={true}\r\n                        >\r\n                            <div className='grid grid-cols-3 gap-2'>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.05))}\r\n                                >5%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.1))}\r\n                                >10%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.15))}\r\n                                >15%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.2))}\r\n                                >20%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.25))}\r\n                                >25%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-[0.4rem] rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                >Custom</button>\r\n                            </div>\r\n                        </ReactTooltip>\r\n                        \r\n                    </div>\r\n                    <button \r\n                        className={`w-[9rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}  \r\n                        onClick={() => handleNextGroup()}          \r\n                    >{getHandleTitle()}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <CartsModal isModal={cartsModal} setIsModal={setCartsModal} registerFlag={true} handleRegister={handleSave}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;"],"names":["Navbar","customSettingComponent","searchBar","searchKeyword","navigate","normalBar","disableRealestate","useNavigate","useState","user","useSelector","selectUser","useDispatch","selectNotifications","searchProduct","setSearchProduct","searchCustomer","setSearchCustomer","className","as","onClick","icon","faCaretLeft","type","placeholder","value","onChange","e","target","onKeyUp","code","faUser","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","username","businessname","active","children","showNavbar","navbarCustomSettingComponent","layoutClass","showNormal","noRealestate","classes","useEffect","init","queryOpts","name","allowWithoutGesture","navigator","permissions","query","isModal","setIsModal","cartsLink","registerFlag","handleRegister","setName","appear","show","onClose","dispatch","orders","selectCurOrders","orderCount","selectCurCount","products","selectProducts","vat","selectVAT","coinType","selectCoinType","customer","selectCustomer","totalCost","setTotalCost","cartsModal","setCartsModal","getProducts","cost","map","o","index","p","getProduct","productId","floatAdd","floatMul","price","amount","id","filter","_id","form_groups","faMinus","order","addCurOrders","handleMinus","faPlus","handlePlus","SUPPORT_COINS","item","setCoinType","walpublic","level","size","href","currentGroup","setCurrentGroup","refs","reduce","acc","val","i","createRef","totalGroups","length","scrollToGroup","current","scrollIntoView","behavior","block","inline","handleNextGroup","openSnackBar","message","status","cleanCurOrders","handlePrevGroup","ret","getSidebarTitle","form_group","ref","faClipboard","faFloppyDisk","faPercent","place","effect","clickable","setVAT","getHandleTitle","merchantId","customerId","coinAmount","updateOrderData"],"sourceRoot":""}